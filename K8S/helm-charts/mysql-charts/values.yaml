# Chart Values

auth: 
  database: service_instance_db
  password: ""
  username: root
  rootPassword: ""
  createDatabase: true
  existingSecret: true
  replicationUser: replicator
  usePasswordFiles: false
  customPasswordFiles: {}
  replicationPassword: ""

rbac: 
  rules: []
  create: false

image: 
  tag: "8.0.34-debian-11-r31"
  debug: false
  digest: ""
  registry: docker.io
  pullPolicy: IfNotPresent
  repository: bitnami/mysql
  pullSecrets: []

global: 
  storageClass: ""
  imageRegistry: ""
  imagePullSecrets: []

metrics: 
  image: 
    tag: "0.15.0-debian-11-r24"
    digest: ""
    registry: docker.io
    pullPolicy: IfNotPresent
    repository: "bitnami/mysqld-exporter"
    pullSecrets: []
  enabled: false
  service: 
    port: 9104
    type: ClusterIP
    clusterIP: ""
    annotations: 
      prometheus: 
        io/port: "{{ .Values.metrics.service.port }}"
        io/scrape: true
  extraArgs: 
    primary: []
    secondary: []
  resources: 
    limits: {}
    requests: {}
  livenessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 120
  prometheusRule: 
    rules: []
    enabled: false
    namespace: ""
    additionalLabels: {}
  readinessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 30
  serviceMonitor: 
    labels: {}
    enabled: false
    interval: 30s
    jobLabel: ""
    selector: {}
    namespace: ""
    annotations: {}
    honorLabels: false
    relabelings: []
    scrapeTimeout: ""
    metricRelabelings: []
  containerSecurityContext: 
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true

primary: 
  pdb: 
    create: false
    minAvailable: 1
    maxUnavailable: ""
  args: []
  name: primary
  command: []
  service: 
    type: ClusterIP
    ports: 
      mysql: 3306
    headless: 
      annotations: {}
    clusterIP: ""
    nodePorts: 
      mysql: ""
    extraPorts: []
    annotations: {}
    loadBalancerIP: ""
    sessionAffinity: None
    externalTrafficPolicy: Cluster
    sessionAffinityConfig: {}
    loadBalancerSourceRanges: []
  affinity: {}
  sidecars: []
  podLabels: {}
  resources: 
    limits: {}
    requests: {}
  extraFlags: ""
  extraPorts: []
  hostAliases: []
  persistence: 
    size: 8Gi
    enabled: true
    subPath: ""
    selector: {}
    accessModes: 
      - ReadWriteOnce
    annotations: {}
    storageClass: ""
    existingClaim: ""
  tolerations: []
  extraEnvVars: []
  extraVolumes: []
  nodeSelector: {}
  startupProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 10
    successThreshold: 1
    initialDelaySeconds: 15
  configuration: |-

    [mysqld]
default_authentication_plugin=mysql_native_password
skip-name-resolve
explicit_defaults_for_timestamp
basedir=/opt/bitnami/mysql
plugin_dir=/opt/bitnami/mysql/lib/plugin
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
datadir=/bitnami/mysql/data
tmpdir=/opt/bitnami/mysql/tmp
max_allowed_packet=16M
bind-address=*
pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
log-error=/opt/bitnami/mysql/logs/mysqld.log
character-set-server=UTF8
collation-server=utf8_general_ci
slow_query_log=0
long_query_time=10.0

[client]
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
default-character-set=UTF8
plugin_dir=/opt/bitnami/mysql/lib/plugin

[manager]
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
  livenessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 5
  schedulerName: ""
  extraEnvVarsCM: ""
  initContainers: []
  lifecycleHooks: {}
  podAnnotations: {}
  readinessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 5
  updateStrategy: 
    type: RollingUpdate
  runtimeClassName: ""
  existingConfigmap: ""
  extraVolumeMounts: []
  podAffinityPreset: ""
  priorityClassName: ""
  customStartupProbe: {}
  extraEnvVarsSecret: ""
  nodeAffinityPreset: 
    key: ""
    type: ""
    values: []
  podSecurityContext: 
    enabled: true
    fsGroup: 1001
  customLivenessProbe: {}
  podManagementPolicy: ""
  customReadinessProbe: {}
  podAntiAffinityPreset: soft
  containerSecurityContext: 
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  topologySpreadConstraints: []
  terminationGracePeriodSeconds: ""

secondary: 
  pdb: 
    create: false
    minAvailable: 1
    maxUnavailable: ""
  args: []
  name: secondary
  command: []
  service: 
    type: ClusterIP
    ports: 
      mysql: 3306
    headless: 
      annotations: {}
    clusterIP: ""
    nodePorts: 
      mysql: ""
    extraPorts: []
    annotations: {}
    loadBalancerIP: ""
    sessionAffinity: None
    externalTrafficPolicy: Cluster
    sessionAffinityConfig: {}
    loadBalancerSourceRanges: []
  affinity: {}
  sidecars: []
  podLabels: {}
  resources: 
    limits: {}
    requests: {}
  extraFlags: ""
  extraPorts: []
  hostAliases: []
  persistence: 
    size: 8Gi
    enabled: true
    subPath: ""
    selector: {}
    accessModes: 
      - ReadWriteOnce
    annotations: {}
    storageClass: ""
    existingClaim: ""
  tolerations: []
  extraEnvVars: []
  extraVolumes: []
  nodeSelector: {}
  replicaCount: 1
  startupProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 15
    successThreshold: 1
    initialDelaySeconds: 15
  configuration: |-

    [mysqld]
default_authentication_plugin=mysql_native_password
skip-name-resolve
explicit_defaults_for_timestamp
basedir=/opt/bitnami/mysql
plugin_dir=/opt/bitnami/mysql/lib/plugin
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
datadir=/bitnami/mysql/data
tmpdir=/opt/bitnami/mysql/tmp
max_allowed_packet=16M
bind-address=*
pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
log-error=/opt/bitnami/mysql/logs/mysqld.log
character-set-server=UTF8
collation-server=utf8_general_ci
slow_query_log=0
long_query_time=10.0

[client]
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
default-character-set=UTF8
plugin_dir=/opt/bitnami/mysql/lib/plugin

[manager]
port=3306
socket=/opt/bitnami/mysql/tmp/mysql.sock
pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
  livenessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 5
  schedulerName: ""
  extraEnvVarsCM: ""
  initContainers: []
  lifecycleHooks: {}
  podAnnotations: {}
  readinessProbe: 
    enabled: true
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
    initialDelaySeconds: 5
  updateStrategy: 
    type: RollingUpdate
  runtimeClassName: ""
  existingConfigmap: ""
  extraVolumeMounts: []
  podAffinityPreset: ""
  priorityClassName: ""
  customStartupProbe: {}
  extraEnvVarsSecret: ""
  nodeAffinityPreset: 
    key: ""
    type: ""
    values: []
  podSecurityContext: 
    enabled: true
    fsGroup: 1001
  customLivenessProbe: {}
  podManagementPolicy: ""
  customReadinessProbe: {}
  podAntiAffinityPreset: soft
  containerSecurityContext: 
    enabled: true
    runAsUser: 1001
    runAsNonRoot: true
  topologySpreadConstraints: []
  terminationGracePeriodSeconds: ""

extraDeploy: []

kubeVersion: ""

architecture: standalone

commonLabels: {}

nameOverride: ""

clusterDomain: cluster.local

initdbScripts: {}

networkPolicy: 
  enabled: false
  allowExternal: true
  explicitNamespacesSelector: {}

diagnosticMode: 
  args: 
    - infinity
  command: 
    - sleep
  enabled: false

serviceAccount: 
  name: ""
  create: true
  annotations: {}
  automountServiceAccountToken: true

startdbScripts: {}

serviceBindings: 
  enabled: false

fullnameOverride: ""

commonAnnotations: {}

namespaceOverride: ""

volumePermissions: 
  image: 
    tag: "11-debian-11-r43"
    digest: ""
    registry: docker.io
    pullPolicy: IfNotPresent
    repository: "bitnami/os-shell"
    pullSecrets: []
  enabled: false
  resources: {}

initdbScriptsConfigMap: ""

startdbScriptsConfigMap: ""
